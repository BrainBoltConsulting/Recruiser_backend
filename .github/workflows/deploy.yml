name: Deploy NestJS to EC2 (Amazon Linux)

on:
  push:
    branches:
      - master  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Starting Deployment..."

            PROJECT_DIR="/home/ec2-user/recruiser/recruiser_backend"
            SERVICE_NAME="interview_api"

            # Ensure project directory exists
            sudo mkdir -p "$PROJECT_DIR"
            sudo chown ec2-user:ec2-user "$PROJECT_DIR"

            # Clone or update repo
            if [ ! -d "$PROJECT_DIR" ]; then
              git clone git@github.com:BrainBoltConsulting/Recruiser_backend.git "$PROJECT_DIR"
            else
              cd "$PROJECT_DIR"
              git pull origin master || { echo 'Git pull failed. Exiting...'; exit 1; }
            fi

            cd "$PROJECT_DIR"

            # Copy .temp.env to .env
            if [ -f "../.temp.env" ]; then
              cp ../.temp.env .env
            else
              echo "ERROR: .temp.env file is missing! Exiting..."
              exit 1
            fi

            echo "Environment variables set successfully."

            # Install dependencies
            npm install --force || { echo 'Failed to install npm dependencies. Exiting...'; exit 1; }

            # Build the NestJS application
            npm run build:prod || { echo 'Failed to build the NestJS application. Exiting...'; exit 1; }

            echo "Proceeding with deployment..."

            # Create systemd service file if it doesn't exist
            if [ ! -f "/etc/systemd/system/${SERVICE_NAME}.service" ]; then
              echo "Creating systemd service file..."
              sudo tee "/etc/systemd/system/${SERVICE_NAME}.service" > /dev/null <<EOF
            [Unit]
            Description=Interview Backend (Nest.js) Service
            After=network.target

            [Service]
            WorkingDirectory=${PROJECT_DIR}
            ExecStart=/usr/bin/npm run start:prod
            Restart=always
            RestartSec=10
            User=ec2-user
            Group=ec2-user
            StandardOutput=append:/var/log/interview_api.log
            StandardError=append:/var/log/interview_api.err

            [Install]
            WantedBy=multi-user.target
            EOF

              sudo systemctl daemon-reload
              sudo systemctl enable ${SERVICE_NAME}
              echo "Service file created and enabled."
            fi

            # Stop the existing service if it's running
            if sudo systemctl is-active --quiet $SERVICE_NAME; then
              echo "Stopping existing $SERVICE_NAME service..."
              sudo systemctl stop $SERVICE_NAME || { echo "Failed to stop service. Exiting..."; exit 1; }
              echo "Service stopped successfully."
            else
              echo "No existing service found. Proceeding with deployment."
            fi

            # Load environment variables
            export $(grep -v '^#' .env | xargs)

            # Start the service using systemctl
            echo "Starting $SERVICE_NAME service..."
            sudo systemctl start $SERVICE_NAME || { echo "Failed to start service. Exiting..."; exit 1; }

            # Wait a moment for the service to start
            sleep 5

            # Check if the service is running
            if sudo systemctl is-active --quiet $SERVICE_NAME; then
              echo "Service started successfully!"
              
              # Show service status
              sudo systemctl status $SERVICE_NAME --no-pager -l
              
              echo "Deployment completed successfully!"
            else
              echo "ERROR: Service failed to start!"
              sudo systemctl status $SERVICE_NAME --no-pager -l
              exit 1
            fi
